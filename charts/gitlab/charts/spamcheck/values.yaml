# Default values for spamcheck.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

annotations: {}

global:
  ingress: {}
  spamcheck:
    enabled: false
  # hosts:
    # spamcheck:
      # name: spamcheck.example.com
      # https: true

hpa:
  maxReplicas: 10
  minReplicas: 1
  targetAverageValue: 100m
  customMetrics: []

networkpolicy:
  enabled: false
  egress:
    enabled: false
    rules: []
  ingress:
    enabled: false
    rules: []
  annotations: {}

image:
  repository: registry.gitlab.com/gitlab-com/gl-security/engineering-and-research/automation-team/spam/spamcheck:latest
  # tag: master
  # pullPolicy: IfNotPresent
  # pullSecrets: []

service:
  type: ClusterIP
  externalPort: 8001
  internalPort: 8001

deployment:
  strategy: {}
  livenessProbe:
    initialDelaySeconds: 20
    periodSeconds: 60
    timeoutSeconds: 30
    successThreshold: 1
    failureThreshold: 3
  readinessProbe:
    initialDelaySeconds: 0
    periodSeconds: 10
    timeoutSeconds: 2
    successThreshold: 1
    failureThreshold: 3

ingress:
  annotations: {}
  configureCertmanager: false
  tls: {}
  path: # /

init:
  image: {}
    # repository:
    # tag:
  resources:
    requests:
      cpu: 50m

logFormat: 'json'
## For PodDisruptionBudget, how many pods can be unavailable at one time
maxUnavailable: 1

podLabels: {}
common:
  labels: {}
serviceLabels: {}

resources:
  requests:
    cpu: 100m
    memory: 100M

metrics:
  enabled: true
  port: 8003
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8003"
    prometheus.io/path: "/metrics"

## Enable deployment to use a serviceAccount
serviceAccount:
  enabled: false
  create: false
  annotations: {}

## Additional environment variables to set
extraEnv:
  STORAGE_URL: 'gs://glsec-spamcheck-data/tflite/20210826T134935Z'

# Tolerations for pod scheduling
tolerations: []

customConfig: {}

## Allow to overwrite under which User and Group we're running.
securityContext:
  runAsUser: 1000
  fsGroup: 1000
